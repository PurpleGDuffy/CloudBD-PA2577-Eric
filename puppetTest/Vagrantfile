# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

Vagrant.configure("2") do |config|

 #Multi-machine config

 #config.vm.box = "bento/ubuntu-18.04"

 # config.vm.provider :google do |google, override|

    #...google provider settings are skipped...

  #  override.ssh.username = "testuser"
  #  override.ssh.private_key_path = "~/.ssh/id_rsa"

    #...google provider settings are skipped...

  #end

  config.vm.provision "shell", inline: <<-SHELL
    wget https://apt.puppetlabs.com/puppet5-release-$(lsb_release -cs).deb
    dpkg -i puppet5-release-$(lsb_release -cs).deb
    apt-get -qq update
    apt-get install -y puppet-agent
  SHELL


  config.vm.provision "puppet" do |puppet|
    puppet.manifests_path = "environments/test/manifests"
    puppet.manifest_file = "default.pp"
    
  end


  config.vm.define "dbserver" do |dbserver|
    dbserver.vm.box = "bento/ubuntu-18.04"
    dbserver.vm.hostname = "dbserver.lan"
    #config.vm.provision
    #sudo apt-get install mysql-server
  end

  config.vm.define "appserver" do |appserver|
    appserver.vm.box = "bento/ubuntu-18.04"
    appserver.vm.hostname = "appserver.lan"
  end
 
  config.vm.define "web" do |web|
  web.vm.network "forwarded_port", guest: 80, host: 8080, auto_correct: true
    web.vm.box = "bento/ubuntu-18.04"
    web.vm.hostname = "web.lan"
  end

  config.vm.define "tst0" do |tst0|
    tst0.vm.box = "bento/ubuntu-18.04"
    tst0.vm.hostname = "tst0"
  end

  config.vm.define "tst1" do |tst1|
    tst1.vm.box = "bento/ubuntu-18.04"
    tst1.vm.hostname = "tst1"
  end

  config.vm.define "tst2" do |tst2|
    tst2.vm.box = "bento/ubuntu-18.04"
    tst2.vm.hostname = "tst2"
  end






  #  puppet.environment = "test"



  #  for i in 81..86
  #    config.vm.network "forwarded_port", guest: i, host: i
  #  end

  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.	
  
  
  ## Display the VirtualBox GUI when booting the machine
  # vb.gui = true


  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
end